<script type="module">
  import { pipeline } from "https://cdn.jsdelivr.net/npm/@xenova/transformers";

  const video = document.getElementById("video");
  const canvas = document.getElementById("canvas");
  const ctx = canvas.getContext("2d");
  const colorPicker = document.getElementById("colorPicker");
  const opacityRange = document.getElementById("opacityRange");

  async function setupCamera() {
    const stream = await navigator.mediaDevices.getUserMedia({ video: true });
    video.srcObject = stream;
    await new Promise((r) => (video.onloadedmetadata = r));
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
  }

  const segmenter = await pipeline("image-segmentation", "jonathandinu/face-parsing");
  console.log("Model loaded.");

  function hexToRgb(hex) {
    const r = parseInt(hex.slice(1,3),16);
    const g = parseInt(hex.slice(3,5),16);
    const b = parseInt(hex.slice(5,7),16);
    return {r,g,b};
  }

  async function analyzeFrame() {
    // Capture current frame as an image
    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
    const frame = ctx.getImageData(0, 0, canvas.width, canvas.height);

    // Run segmentation on the captured frame (converted to ImageData)
    const result = await segmenter(frame);

    // Extract mask
    const mask = result.segmentation;
    const {r,g,b} = hexToRgb(colorPicker.value);
    const opacity = parseFloat(opacityRange.value);
    const {data} = frame;

    for (let i = 0; i < mask.length; i++) {
      const cls = mask[i];
      if (cls === 7 || cls === 8) { // upper and lower lip
        const j = i * 4;
        data[j]   = data[j]*(1-opacity) + r*opacity;
        data[j+1] = data[j+1]*(1-opacity) + g*opacity;
        data[j+2] = data[j+2]*(1-opacity) + b*opacity;
      }
    }

    ctx.putImageData(frame, 0, 0);
  }

  async function main() {
    await setupCamera();

    // Capture a frame every 2 seconds
    setInterval(analyzeFrame, 2000);
  }

  main();
</script>
